/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from "./routes/__root";
import { Route as LayoutImport } from "./routes/_layout";
import { Route as LayoutIndexImport } from "./routes/_layout/index";
import { Route as LayoutSigninImport } from "./routes/_layout/signin";
import { Route as LayoutRegisterImport } from "./routes/_layout/register";
import { Route as LayoutCartImport } from "./routes/_layout/cart";
import { Route as LayoutBrowseImport } from "./routes/_layout/browse";
import { Route as LayoutAccountImport } from "./routes/_layout/account";
import { Route as LayoutGamesGameIdImport } from "./routes/_layout/games/$gameId";

// Create/Update Routes

const LayoutRoute = LayoutImport.update({
  id: "/_layout",
  getParentRoute: () => rootRoute,
} as any);

const LayoutIndexRoute = LayoutIndexImport.update({
  path: "/",
  getParentRoute: () => LayoutRoute,
} as any);

const LayoutSigninRoute = LayoutSigninImport.update({
  path: "/signin",
  getParentRoute: () => LayoutRoute,
} as any);

const LayoutRegisterRoute = LayoutRegisterImport.update({
  path: "/register",
  getParentRoute: () => LayoutRoute,
} as any);

const LayoutCartRoute = LayoutCartImport.update({
  path: "/cart",
  getParentRoute: () => LayoutRoute,
} as any);

const LayoutBrowseRoute = LayoutBrowseImport.update({
  path: "/browse",
  getParentRoute: () => LayoutRoute,
} as any);

const LayoutAccountRoute = LayoutAccountImport.update({
  path: "/account",
  getParentRoute: () => LayoutRoute,
} as any);

const LayoutGamesGameIdRoute = LayoutGamesGameIdImport.update({
  path: "/games/$gameId",
  getParentRoute: () => LayoutRoute,
} as any);

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/_layout": {
      id: "/_layout";
      path: "";
      fullPath: "";
      preLoaderRoute: typeof LayoutImport;
      parentRoute: typeof rootRoute;
    };
    "/_layout/account": {
      id: "/_layout/account";
      path: "/account";
      fullPath: "/account";
      preLoaderRoute: typeof LayoutAccountImport;
      parentRoute: typeof LayoutImport;
    };
    "/_layout/browse": {
      id: "/_layout/browse";
      path: "/browse";
      fullPath: "/browse";
      preLoaderRoute: typeof LayoutBrowseImport;
      parentRoute: typeof LayoutImport;
    };
    "/_layout/cart": {
      id: "/_layout/cart";
      path: "/cart";
      fullPath: "/cart";
      preLoaderRoute: typeof LayoutCartImport;
      parentRoute: typeof LayoutImport;
    };
    "/_layout/register": {
      id: "/_layout/register";
      path: "/register";
      fullPath: "/register";
      preLoaderRoute: typeof LayoutRegisterImport;
      parentRoute: typeof LayoutImport;
    };
    "/_layout/signin": {
      id: "/_layout/signin";
      path: "/signin";
      fullPath: "/signin";
      preLoaderRoute: typeof LayoutSigninImport;
      parentRoute: typeof LayoutImport;
    };
    "/_layout/": {
      id: "/_layout/";
      path: "/";
      fullPath: "/";
      preLoaderRoute: typeof LayoutIndexImport;
      parentRoute: typeof LayoutImport;
    };
    "/_layout/games/$gameId": {
      id: "/_layout/games/$gameId";
      path: "/games/$gameId";
      fullPath: "/games/$gameId";
      preLoaderRoute: typeof LayoutGamesGameIdImport;
      parentRoute: typeof LayoutImport;
    };
  }
}

// Create and export the route tree

interface LayoutRouteChildren {
  LayoutAccountRoute: typeof LayoutAccountRoute;
  LayoutBrowseRoute: typeof LayoutBrowseRoute;
  LayoutCartRoute: typeof LayoutCartRoute;
  LayoutRegisterRoute: typeof LayoutRegisterRoute;
  LayoutSigninRoute: typeof LayoutSigninRoute;
  LayoutIndexRoute: typeof LayoutIndexRoute;
  LayoutGamesGameIdRoute: typeof LayoutGamesGameIdRoute;
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutAccountRoute: LayoutAccountRoute,
  LayoutBrowseRoute: LayoutBrowseRoute,
  LayoutCartRoute: LayoutCartRoute,
  LayoutRegisterRoute: LayoutRegisterRoute,
  LayoutSigninRoute: LayoutSigninRoute,
  LayoutIndexRoute: LayoutIndexRoute,
  LayoutGamesGameIdRoute: LayoutGamesGameIdRoute,
};

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren);

export interface FileRoutesByFullPath {
  "": typeof LayoutRouteWithChildren;
  "/account": typeof LayoutAccountRoute;
  "/browse": typeof LayoutBrowseRoute;
  "/cart": typeof LayoutCartRoute;
  "/register": typeof LayoutRegisterRoute;
  "/signin": typeof LayoutSigninRoute;
  "/": typeof LayoutIndexRoute;
  "/games/$gameId": typeof LayoutGamesGameIdRoute;
}

export interface FileRoutesByTo {
  "/account": typeof LayoutAccountRoute;
  "/browse": typeof LayoutBrowseRoute;
  "/cart": typeof LayoutCartRoute;
  "/register": typeof LayoutRegisterRoute;
  "/signin": typeof LayoutSigninRoute;
  "/": typeof LayoutIndexRoute;
  "/games/$gameId": typeof LayoutGamesGameIdRoute;
}

export interface FileRoutesById {
  __root__: typeof rootRoute;
  "/_layout": typeof LayoutRouteWithChildren;
  "/_layout/account": typeof LayoutAccountRoute;
  "/_layout/browse": typeof LayoutBrowseRoute;
  "/_layout/cart": typeof LayoutCartRoute;
  "/_layout/register": typeof LayoutRegisterRoute;
  "/_layout/signin": typeof LayoutSigninRoute;
  "/_layout/": typeof LayoutIndexRoute;
  "/_layout/games/$gameId": typeof LayoutGamesGameIdRoute;
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths:
    | ""
    | "/account"
    | "/browse"
    | "/cart"
    | "/register"
    | "/signin"
    | "/"
    | "/games/$gameId";
  fileRoutesByTo: FileRoutesByTo;
  to:
    | "/account"
    | "/browse"
    | "/cart"
    | "/register"
    | "/signin"
    | "/"
    | "/games/$gameId";
  id:
    | "__root__"
    | "/_layout"
    | "/_layout/account"
    | "/_layout/browse"
    | "/_layout/cart"
    | "/_layout/register"
    | "/_layout/signin"
    | "/_layout/"
    | "/_layout/games/$gameId";
  fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
  LayoutRoute: typeof LayoutRouteWithChildren;
}

const rootRouteChildren: RootRouteChildren = {
  LayoutRoute: LayoutRouteWithChildren,
};

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_layout"
      ]
    },
    "/_layout": {
      "filePath": "_layout.tsx",
      "children": [
        "/_layout/account",
        "/_layout/browse",
        "/_layout/cart",
        "/_layout/register",
        "/_layout/signin",
        "/_layout/",
        "/_layout/games/$gameId"
      ]
    },
    "/_layout/account": {
      "filePath": "_layout/account.tsx",
      "parent": "/_layout"
    },
    "/_layout/browse": {
      "filePath": "_layout/browse.tsx",
      "parent": "/_layout"
    },
    "/_layout/cart": {
      "filePath": "_layout/cart.tsx",
      "parent": "/_layout"
    },
    "/_layout/register": {
      "filePath": "_layout/register.tsx",
      "parent": "/_layout"
    },
    "/_layout/signin": {
      "filePath": "_layout/signin.tsx",
      "parent": "/_layout"
    },
    "/_layout/": {
      "filePath": "_layout/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/games/$gameId": {
      "filePath": "_layout/games/$gameId.tsx",
      "parent": "/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
